{"remainingRequest":"/Users/kierangillen/code/palette/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/typescript\",\"@babel/react\",[\"@babel/env\",{\"targets\":{\"browsers\":[\"last 2 versions\"]}}],[\"/Users/kierangillen/code/palette/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"module-resolver\",{\"extensions\":[\".ts\",\".tsx\"],\"root\":[\"./src\"]}],[\"/Users/kierangillen/code/palette/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/kierangillen/code/palette/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/kierangillen/code/palette/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/kierangillen/code/palette/src/platform/fonts/index.ts","dependencies":[{"path":"/Users/kierangillen/code/palette/src/platform/fonts/index.ts","mtime":1550251031226},{"path":"/Users/kierangillen/code/palette/node_modules/cache-loader/dist/cjs.js","mtime":1550251304255},{"path":"/Users/kierangillen/code/palette/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1550251304217},{"path":"/Users/kierangillen/code/palette/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1550251304506}],"contextDependencies":[],"result":["export { fontFamily } from \"./fontFamily\";\n/**\n * Type definition for font objects\n */",{"version":3,"sources":["/Users/kierangillen/code/palette/src/platform/fonts/index.ts"],"names":["fontFamily"],"mappings":"AAAA,SAASA,UAAT;AAEA","sourcesContent":["export { fontFamily } from \"./fontFamily\"\n\n/**\n * Type definition for font objects\n */\nexport interface FontDefinition {\n  fontFamily: string\n  fontWeight?: string | number\n  fontStyle?: string\n}\n\n/**\n * Type definition for font value properties which can either\n * be an object for complex definitions or a string for single entries.\n */\nexport type FontValue = string | FontDefinition\n\n/**\n * Defines the shape of the font family\n */\nexport interface FontFamily {\n  sans: {\n    regular: FontValue\n    italic: FontValue\n    medium: FontValue\n    mediumItalic: FontValue\n  }\n  serif: {\n    regular: FontValue\n    italic: FontValue\n    semibold: FontValue\n  }\n  display: {\n    regular: FontValue\n  }\n}\n"]}]}