{"remainingRequest":"/Users/kierangillen/code/palette/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/typescript\",\"@babel/react\",[\"@babel/env\",{\"targets\":{\"browsers\":[\"last 2 versions\"]}}],[\"/Users/kierangillen/code/palette/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"module-resolver\",{\"extensions\":[\".ts\",\".tsx\"],\"root\":[\"./src\"]}],[\"/Users/kierangillen/code/palette/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/kierangillen/code/palette/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/kierangillen/code/palette/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx","dependencies":[{"path":"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx","mtime":1550251031217},{"path":"/Users/kierangillen/code/palette/node_modules/cache-loader/dist/cjs.js","mtime":1550251304255},{"path":"/Users/kierangillen/code/palette/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1550251304217},{"path":"/Users/kierangillen/code/palette/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1550251304506}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 100px 100px 100px 100px;\\n  grid-gap: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100px;\\n  height: 100px;\\n  padding: 5px;\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { color } from \"styled-system\";\nimport { themeProps } from \"../../Theme\";\nimport { Flex } from \"../Flex\";\nimport { Display } from \"../Typography\";\nvar ColorBlock = styled.div(_templateObject(), color);\n\nvar LabeledColorBlock = function LabeledColorBlock(_ref) {\n  var name = _ref.name;\n  return React.createElement(ColorBlock, {\n    bg: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Display, {\n    color: visibleColor(name),\n    size: \"3t\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, name.toUpperCase()), React.createElement(Display, {\n    color: visibleColor(name),\n    size: \"3t\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, themeProps.colors[name])));\n};\n\nvar Grid = styled.div(_templateObject2());\n/**\n * Artsy's color palette\n */\n\nexport var Colors = function Colors() {\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, Object.keys(themeProps.colors).map(function (name, key) {\n    return React.createElement(LabeledColorBlock, {\n      name: name,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }));\n}; // http://24ways.org/2010/calculating-color-contrast/\n\nvar getContrast = function getContrast(hex) {\n  var r = parseInt(hex.substr(1, 2), 16);\n  var g = parseInt(hex.substr(3, 2), 16);\n  var b = parseInt(hex.substr(5, 2), 16);\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 128 ? \"black\" : \"white\";\n};\n\nvar visibleColor = function visibleColor(name) {\n  return getContrast(themeProps.colors[name]);\n};\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ColorBlock, \"ColorBlock\", \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\");\n  reactHotLoader.register(LabeledColorBlock, \"LabeledColorBlock\", \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\");\n  reactHotLoader.register(Grid, \"Grid\", \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\");\n  reactHotLoader.register(Colors, \"Colors\", \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\");\n  reactHotLoader.register(getContrast, \"getContrast\", \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\");\n  reactHotLoader.register(visibleColor, \"visibleColor\", \"/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/kierangillen/code/palette/src/elements/Colors/Colors.tsx"],"names":["React","styled","color","themeProps","Flex","Display","ColorBlock","div","LabeledColorBlock","name","visibleColor","toUpperCase","colors","Grid","Colors","Object","keys","map","key","getContrast","hex","r","parseInt","substr","g","b","yiq"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAA0BC,KAA1B,QAAmD,eAAnD;AACA,SAASC,UAAT;AACA,SAASC,IAAT;AACA,SAASC,OAAT;AAIA,IAAMC,UAAU,GAAGL,MAAM,CAACM,GAAV,oBAIZL,KAJY,CAAhB;;AAOA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACxB,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEC,YAAY,CAACD,IAAD,CAA5B;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,WAAL,EADH,CADF,EAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAED,YAAY,CAACD,IAAD,CAA5B;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,UAAU,CAACS,MAAX,CAAkBH,IAAlB,CADH,CAJF,CADF,CADwB;AAAA,CAA1B;;AAaA,IAAMI,IAAI,GAAGZ,MAAM,CAACM,GAAV,oBAAV;AAMA;;;;AAGA,OAAO,IAAMO,MAAM,GAAG,SAATA,MAAS;AAAA,SACpB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYb,UAAU,CAACS,MAAvB,EAA+BK,GAA/B,CAAmC,UAACR,IAAD,EAAOS,GAAP;AAAA,WAClC,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAET,IAAzB;AAA+B,MAAA,GAAG,EAAES,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkC;AAAA,GAAnC,CADH,CADoB;AAAA,CAAf,C,CAQP;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AACzB,MAAMC,CAAC,GAAGC,QAAQ,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAlB;AACA,MAAMC,CAAC,GAAGF,QAAQ,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAlB;AACA,MAAME,CAAC,GAAGH,QAAQ,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAlB;AACA,MAAMG,GAAG,GAAG,CAACL,CAAC,GAAG,GAAJ,GAAUG,CAAC,GAAG,GAAd,GAAoBC,CAAC,GAAG,GAAzB,IAAgC,IAA5C;AACA,SAAOC,GAAG,IAAI,GAAP,GAAa,OAAb,GAAuB,OAA9B;AACD,CAND;;AAOA,IAAMhB,YAAY,GAAG,SAAfA,YAAe,CAAAD,IAAI;AAAA,SAAIU,WAAW,CAAChB,UAAU,CAACS,MAAX,CAAkBH,IAAlB,CAAD,CAAf;AAAA,CAAzB;;;;;;;;;;;;;0BA7CMH,U;0BAOAE,iB;0BAaAK,I;0BASOC,M;0BASPK,W;0BAOAT,Y","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { BackgroundProps, color, ColorProps } from \"styled-system\"\nimport { themeProps } from \"../../Theme\"\nimport { Flex } from \"../Flex\"\nimport { Display } from \"../Typography\"\n\nexport interface ColorBlockProps extends ColorProps, BackgroundProps {}\n\nconst ColorBlock = styled.div<ColorBlockProps>`\n  width: 100px;\n  height: 100px;\n  padding: 5px;\n  ${color};\n`\n\nconst LabeledColorBlock = ({ name }) => (\n  <ColorBlock bg={name}>\n    <Flex flexDirection=\"column\">\n      <Display color={visibleColor(name)} size=\"3t\">\n        {name.toUpperCase()}\n      </Display>\n      <Display color={visibleColor(name)} size=\"3t\">\n        {themeProps.colors[name]}\n      </Display>\n    </Flex>\n  </ColorBlock>\n)\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 100px 100px 100px 100px;\n  grid-gap: 10px;\n`\n\n/**\n * Artsy's color palette\n */\nexport const Colors = () => (\n  <Grid>\n    {Object.keys(themeProps.colors).map((name, key) => (\n      <LabeledColorBlock name={name} key={key} />\n    ))}\n  </Grid>\n)\n\n// http://24ways.org/2010/calculating-color-contrast/\nconst getContrast = hex => {\n  const r = parseInt(hex.substr(1, 2), 16)\n  const g = parseInt(hex.substr(3, 2), 16)\n  const b = parseInt(hex.substr(5, 2), 16)\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000\n  return yiq >= 128 ? \"black\" : \"white\"\n}\nconst visibleColor = name => getContrast(themeProps.colors[name])\n"]}]}